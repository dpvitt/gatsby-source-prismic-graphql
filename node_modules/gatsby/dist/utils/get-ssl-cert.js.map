{"version":3,"sources":["../../src/utils/get-ssl-cert.js"],"names":["certificateFor","require","report","fs","path","absoluteOrDirectory","directory","filePath","isAbsolute","join","module","exports","name","certFile","keyFile","panic","id","context","keyPath","certPath","key","readFileSync","cert","info","installCertutil","err","error","message"],"mappings":";;AAAA,MAAMA,cAAc,GAAGC,OAAO,CAAE,SAAF,CAAP,CAAmBD,cAA1C;;AACA,MAAME,MAAM,GAAGD,OAAO,CAAE,yBAAF,CAAtB;;AACA,MAAME,EAAE,GAAGF,OAAO,CAAE,IAAF,CAAlB;;AACA,MAAMG,IAAI,GAAGH,OAAO,CAAE,MAAF,CAApB;;AAEA,MAAMI,mBAAmB,GAAG,CAACC,SAAD,EAAYC,QAAZ,KAAyB;AACnD;AACA,MAAIH,IAAI,CAACI,UAAL,CAAgBD,QAAhB,CAAJ,EAA+B;AAC7B,WAAOA,QAAP;AACD;;AACD,SAAOH,IAAI,CAACK,IAAL,CAAUH,SAAV,EAAqBC,QAArB,CAAP;AACD,CAND;;AAQAG,MAAM,CAACC,OAAP,GAAiB,OAAO;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,QAAR;AAAkBC,EAAAA,OAAlB;AAA2BR,EAAAA;AAA3B,CAAP,KAAkD;AACjE;AACA;AACA,MAAIO,QAAQ,GAAG,CAACC,OAAJ,GAAcA,OAA1B,EAAmC;AACjCZ,IAAAA,MAAM,CAACa,KAAP,CAAa;AACXC,MAAAA,EAAE,EAAG,OADM;AAEXC,MAAAA,OAAO,EAAE;AAFE,KAAb;AAID;;AAED,MAAIJ,QAAQ,IAAIC,OAAhB,EAAyB;AACvB,UAAMI,OAAO,GAAGb,mBAAmB,CAACC,SAAD,EAAYQ,OAAZ,CAAnC;AACA,UAAMK,QAAQ,GAAGd,mBAAmB,CAACC,SAAD,EAAYO,QAAZ,CAApC;AAEA,WAAO,MAAM;AACXK,MAAAA,OADW;AAEXC,MAAAA,QAFW;AAGXC,MAAAA,GAAG,EAAEjB,EAAE,CAACkB,YAAH,CAAgBH,OAAhB,CAHM;AAIXI,MAAAA,IAAI,EAAEnB,EAAE,CAACkB,YAAH,CAAgBF,QAAhB;AAJK,KAAb;AAMD;;AAEDjB,EAAAA,MAAM,CAACqB,IAAP,CAAa,2DAAb;;AACA,MAAI;AACF,WAAO,MAAMvB,cAAc,CAACY,IAAD,EAAO;AAChCY,MAAAA,eAAe,EAAE;AADe,KAAP,CAA3B;AAGD,GAJD,CAIE,OAAOC,GAAP,EAAY;AACZvB,IAAAA,MAAM,CAACa,KAAP,CAAa;AACXC,MAAAA,EAAE,EAAG,OADM;AAEXU,MAAAA,KAAK,EAAED,GAFI;AAGXR,MAAAA,OAAO,EAAE;AACPU,QAAAA,OAAO,EAAEF,GAAG,CAACE;AADN;AAHE,KAAb;AAOD;;AAED,SAAO,KAAP;AACD,CAtCD","sourcesContent":["const certificateFor = require(`devcert`).certificateFor\nconst report = require(`gatsby-cli/lib/reporter`)\nconst fs = require(`fs`)\nconst path = require(`path`)\n\nconst absoluteOrDirectory = (directory, filePath) => {\n  // Support absolute paths\n  if (path.isAbsolute(filePath)) {\n    return filePath\n  }\n  return path.join(directory, filePath)\n}\n\nmodule.exports = async ({ name, certFile, keyFile, directory }) => {\n  // check that cert file and key file are both true or both false, if they are both\n  // false, it defaults to the automatic ssl\n  if (certFile ? !keyFile : keyFile) {\n    report.panic({\n      id: `11521`,\n      context: {},\n    })\n  }\n\n  if (certFile && keyFile) {\n    const keyPath = absoluteOrDirectory(directory, keyFile)\n    const certPath = absoluteOrDirectory(directory, certFile)\n\n    return await {\n      keyPath,\n      certPath,\n      key: fs.readFileSync(keyPath),\n      cert: fs.readFileSync(certPath),\n    }\n  }\n\n  report.info(`setting up automatic SSL certificate (may require sudo)\\n`)\n  try {\n    return await certificateFor(name, {\n      installCertutil: true,\n    })\n  } catch (err) {\n    report.panic({\n      id: `11522`,\n      error: err,\n      context: {\n        message: err.message,\n      },\n    })\n  }\n\n  return false\n}\n"],"file":"get-ssl-cert.js"}